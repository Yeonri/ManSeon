apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

// React Native 설정
react {
    autolinkLibrariesWithApp()
}

// Proguard 릴리즈 빌드 옵션 (기본 꺼짐)
def enableProguardInReleaseBuilds = false

// JavaScriptCore (JSC) 엔진 선택
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

// Android 설정
android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.fe"

    defaultConfig {
        applicationId "com.fe"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        // .env에서 불러오는 구글 맵 API 키
        manifestPlaceholders = [
            GOOGLE_MAPS_API_KEY: project.env.get("GOOGLE_MAPS_API_KEY") ?: "default_key"
        ]
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

// 의존성 정의
dependencies {
    // React Native core
    implementation("com.facebook.react:react-android")

    // JavaScript 엔진 선택
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    // ✅ TensorFlow Lite Core (꼭 필요!)
    implementation 'org.tensorflow:tensorflow-lite:2.13.0'

    // (선택) GPU Delegate
    // implementation 'org.tensorflow:tensorflow-lite-gpu:2.13.0'

    // (선택) Support library for TensorImage, TensorBuffer 등
    // implementation 'org.tensorflow:tensorflow-lite-support:0.4.3'

    // (선택) 사용할 경우만 추가
    // implementation 'org.tensorflow:tensorflow-lite-select-tf-ops:2.13.0'
}

// 의존성 충돌 해결
configurations.all {
    resolutionStrategy {
        force 'androidx.core:core:1.13.1'
    }
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'com.android.support') {
            details.useVersion "28.0.0"
            details.because "Force AndroidX, avoid support library conflicts"
        }
    }
}

// 추가 리포지토리 (RN Maps 등)
allprojects {
    repositories {
        google()
        mavenCentral() // ✅ 필수: TensorFlow Lite를 위한 중앙 저장소
        maven {
            url("$rootDir/../node_modules/react-native-maps/android")
        }
    }
}
